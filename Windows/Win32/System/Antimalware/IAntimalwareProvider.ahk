#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32ComInterface.ahk
#Include ..\..\..\..\Guid.ahk
#Include ..\Com\IUnknown.ahk

/**
 * Represents the provider of the antimalware product.
 * @remarks
 * 
  * As of Windows 10, version 1903, Windows has added a way to enable Authenticode signing checks for providers. The feature is disabled by default, for both 32-bit and 64-bit processes. If you are creating a provider for test purposes, then you can enable or disable sign checks by setting the following Windows Registry value appropriately. The value is a DWORD.
  * 
  * `Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\AMSI\FeatureBits`
  * 
  * |Value|Behavior|
  * |-|-|
  * |0x1|The signing check is disabled. This is the default behavior. You can also use this value, temporarily, while testing.|
  * |0x2|The check for Authenticode signing is enabled.|
  * 
  * Deleting the registry value altogether behaves as if the value 0x1 were present.
  * 
  * > [!NOTE]
  * > As a provider, you must use the `/ac` switch (with the [SignTool](/windows/win32/seccrypto/signtool)) to cross-sign with an Authenticode certificate. Once you've signed your binary, you can then verify it by using the SignTool and the `/kp` option. If the SignTool returns no error, then your binary is properly signed.
  * 
  * > [!IMPORTANT]
  * > Even though the Windows Registry value is not protected by the operating system, your computer's antivirus provider might protect the value, thus making it write-protected.
  * 
  * To check whether or not your provider is loading, you can [view code integrity events](/windows-hardware/drivers/install/viewing-code-integrity-events). Be sure to [enable verbose logging of code integrity diagnostic events](/windows-hardware/drivers/install/enabling-the-system-event-audit-log#how-to-enable-verbose-logging-of-code-integrity-diagnostic-events). The event IDs to look for are *3040* and *3041*. Here are some examples.
  * 
  * ```
  * Log Name:      Microsoft-Windows-CodeIntegrity/Verbose
  * Source:        Microsoft-Windows-CodeIntegrity
  * Date:          M/DD/YYYY H:MM:SS PM
  * Event ID:      3040
  * Task Category: (14)
  * Level:         Verbose
  * Keywords:      
  * User:          [DOMAIN_NAME]\Administrator
  * Computer:      [COMPUTER_NAME]
  * Description:
  * Code Integrity started retrieving the cached data of [PATH_AND_FILENAME] file.
  * Event Xml:
  * <Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event">
  *   <System>
  *     <Provider Name="Microsoft-Windows-CodeIntegrity" Guid="{4ee76bd8-3cf4-44a0-a0ac-3937643e37a3}" />
  *     <EventID>3040</EventID>
  *     <Version>0</Version>
  *     <Level>5</Level>
  *     <Task>14</Task>
  *     <Opcode>1</Opcode>
  *     <Keywords>0x4000000000000000</Keywords>
  *     <TimeCreated SystemTime="YYYY-MM-DDT02:26:48.875954700Z" />
  *     <EventRecordID>7</EventRecordID>
  *     <Correlation />
  *     <Execution ProcessID="4972" ThreadID="7752" ProcessorID="1" KernelTime="14" UserTime="2" />
  *     <Channel>Microsoft-Windows-CodeIntegrity/Verbose</Channel>
  *     <Computer>[COMPUTER_NAME]</Computer>
  *     <Security UserID="[USER_SID]" />
  *   </System>
  *   <EventData>
  *     <Data Name="FileNameLength">40</Data>
  *     <Data Name="FileNameBuffer">[PATH_AND_FILENAME]</Data>
  *   </EventData>
  * </Event>
  * ```
  * 
  * ```
  * Log Name:      Microsoft-Windows-CodeIntegrity/Verbose
  * Source:        Microsoft-Windows-CodeIntegrity
  * Date:          M/DD/YYYY H:MM:SS PM
  * Event ID:      3041
  * Task Category: (14)
  * Level:         Verbose
  * Keywords:      
  * User:          [DOMAIN_NAME]\Administrator
  * Computer:      [COMPUTER_NAME]
  * Description:
  * Code Integrity completed retrieval of file cache. Status 0xC0000225.
  * Event Xml:
  * <Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event">
  *   <System>
  *     <Provider Name="Microsoft-Windows-CodeIntegrity" Guid="{4ee76bd8-3cf4-44a0-a0ac-3937643e37a3}" />
  *     <EventID>3041</EventID>
  *     <Version>2</Version>
  *     <Level>5</Level>
  *     <Task>14</Task>
  *     <Opcode>2</Opcode>
  *     <Keywords>0x4000000000000000</Keywords>
  *     <TimeCreated SystemTime="YYYY-MM-DDT02:26:48.875964700Z" />
  *     <EventRecordID>8</EventRecordID>
  *     <Correlation />
  *     <Execution ProcessID="4972" ThreadID="7752" ProcessorID="1" KernelTime="14" UserTime="2" />
  *     <Channel>Microsoft-Windows-CodeIntegrity/Verbose</Channel>
  *     <Computer>[COMPUTER_NAME]</Computer>
  *     <Security UserID="[USER_SID]" />
  *   </System>
  *   <EventData>
  *     <Data Name="Status">0xc0000225</Data>
  *     <Data Name="CachedFlags">0x0</Data>
  *     <Data Name="CacheSource">0</Data>
  *     <Data Name="CachedPolicy">0</Data>
  *   </EventData>
  * </Event>
  * ```
  * 
  * 
 * @see https://docs.microsoft.com/windows/win32/api//amsi/nn-amsi-iantimalwareprovider
 * @namespace Windows.Win32.System.Antimalware
 * @version v4.0.30319
 */
class IAntimalwareProvider extends IUnknown{

    static sizeof => A_PtrSize
    /**
     * The interface identifier for IAntimalwareProvider
     * @type {Guid}
     */
    static IID => Guid("{b2cabfe3-fe04-42b1-a5df-08d483d4d125}")

    /**
     * The offset into the COM object's virtual function table at which this interface's methods begin.
     * @type {Integer}
     */
    static vTableOffset => 3

    /**
     * @readonly used when implementing interfaces to order function pointers
     * @type {Array<String>}
     */
    static VTableNames => ["Scan", "CloseSession", "DisplayName"]

    /**
     * 
     * @param {IAmsiStream} stream 
     * @param {Pointer<Integer>} result 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/amsi/nf-amsi-iantimalwareprovider-scan
     */
    Scan(stream, result) {
        resultMarshal := result is VarRef ? "int*" : "ptr"

        result := ComCall(3, this, "ptr", stream, resultMarshal, result, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Integer} session 
     * @returns {String} Nothing - always returns an empty string
     * @see https://learn.microsoft.com/windows/win32/api/amsi/nf-amsi-iantimalwareprovider-closesession
     */
    CloseSession(session) {
        ComCall(4, this, "uint", session)
    }

    /**
     * 
     * @param {Pointer<PWSTR>} displayName 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/amsi/nf-amsi-iantimalwareprovider-displayname
     */
    DisplayName(displayName) {
        result := ComCall(5, this, "ptr", displayName, "HRESULT")
        return result
    }
}
