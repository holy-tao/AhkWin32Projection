#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32ComInterface.ahk
#Include ..\..\..\..\Guid.ahk
#Include ..\Com\IUnknown.ahk

/**
 * Represents a stream to be scanned.
 * @see https://docs.microsoft.com/windows/win32/api//amsi/nn-amsi-iamsistream
 * @namespace Windows.Win32.System.Antimalware
 * @version v4.0.30319
 */
class IAmsiStream extends IUnknown{

    static sizeof => A_PtrSize
    /**
     * The interface identifier for IAmsiStream
     * @type {Guid}
     */
    static IID => Guid("{3e47f2e5-81d4-4d3b-897f-545096770373}")

    /**
     * The offset into the COM object's virtual function table at which this interface's methods begin.
     * @type {Integer}
     */
    static vTableOffset => 3

    /**
     * @readonly used when implementing interfaces to order function pointers
     * @type {Array<String>}
     */
    static VTableNames => ["GetAttribute", "Read"]

    /**
     * 
     * @param {Integer} attribute 
     * @param {Integer} dataSize 
     * @param {Pointer<Integer>} data 
     * @param {Pointer<Integer>} retData 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/amsi/nf-amsi-iamsistream-getattribute
     */
    GetAttribute(attribute, dataSize, data, retData) {
        dataMarshal := data is VarRef ? "char*" : "ptr"
        retDataMarshal := retData is VarRef ? "uint*" : "ptr"

        result := ComCall(3, this, "int", attribute, "uint", dataSize, dataMarshal, data, retDataMarshal, retData, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Integer} position 
     * @param {Integer} size 
     * @param {Pointer<Integer>} buffer 
     * @param {Pointer<Integer>} readSize 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/amsi/nf-amsi-iamsistream-read
     */
    Read(position, size, buffer, readSize) {
        bufferMarshal := buffer is VarRef ? "char*" : "ptr"
        readSizeMarshal := readSize is VarRef ? "uint*" : "ptr"

        result := ComCall(4, this, "uint", position, "uint", size, bufferMarshal, buffer, readSizeMarshal, readSize, "HRESULT")
        return result
    }
}
