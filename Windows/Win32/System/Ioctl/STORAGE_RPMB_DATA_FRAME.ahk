#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32Struct.ahk

/**
 * 
 * @remarks
 * 
  * 
 * @see https://docs.microsoft.com/windows/win32/api//winioctl/ns-winioctl-storage_rpmb_data_frame
 * @namespace Windows.Win32.System.Ioctl
 * @version v4.0.30319
 */
class STORAGE_RPMB_DATA_FRAME extends Win32Struct
{
    static sizeof => 512

    static packingSize => 1

    /**
     * Reserved space.
     * @type {Array<Byte>}
     */
    Stuff{
        get {
            if(!this.HasProp("__StuffProxyArray"))
                this.__StuffProxyArray := Win32FixedArray(this.ptr + 0, 196, Primitive, "char")
            return this.__StuffProxyArray
        }
    }

    /**
     * Either the key to be programmed or the MAC authenticating this frame or series of frames.
     * @type {Array<Byte>}
     */
    KeyOrMAC{
        get {
            if(!this.HasProp("__KeyOrMACProxyArray"))
                this.__KeyOrMACProxyArray := Win32FixedArray(this.ptr + 196, 32, Primitive, "char")
            return this.__KeyOrMACProxyArray
        }
    }

    /**
     * The data input or output.
     * @type {Array<Byte>}
     */
    Data{
        get {
            if(!this.HasProp("__DataProxyArray"))
                this.__DataProxyArray := Win32FixedArray(this.ptr + 228, 256, Primitive, "char")
            return this.__DataProxyArray
        }
    }

    /**
     * Random 128-bit number generated by host. Only required for reads.
     * @type {Array<Byte>}
     */
    Nonce{
        get {
            if(!this.HasProp("__NonceProxyArray"))
                this.__NonceProxyArray := Win32FixedArray(this.ptr + 484, 16, Primitive, "char")
            return this.__NonceProxyArray
        }
    }

    /**
     * 32-bit counter. Only required for writes.
     * @type {Array<Byte>}
     */
    WriteCounter{
        get {
            if(!this.HasProp("__WriteCounterProxyArray"))
                this.__WriteCounterProxyArray := Win32FixedArray(this.ptr + 500, 4, Primitive, "char")
            return this.__WriteCounterProxyArray
        }
    }

    /**
     * The half-sector address to operate on.
     * @type {Array<Byte>}
     */
    Address{
        get {
            if(!this.HasProp("__AddressProxyArray"))
                this.__AddressProxyArray := Win32FixedArray(this.ptr + 504, 2, Primitive, "char")
            return this.__AddressProxyArray
        }
    }

    /**
     * The count of half-sector blocks to read/write.
     * @type {Array<Byte>}
     */
    BlockCount{
        get {
            if(!this.HasProp("__BlockCountProxyArray"))
                this.__BlockCountProxyArray := Win32FixedArray(this.ptr + 506, 2, Primitive, "char")
            return this.__BlockCountProxyArray
        }
    }

    /**
     * The result of the operation.
     * @type {Array<Byte>}
     */
    OperationResult{
        get {
            if(!this.HasProp("__OperationResultProxyArray"))
                this.__OperationResultProxyArray := Win32FixedArray(this.ptr + 508, 2, Primitive, "char")
            return this.__OperationResultProxyArray
        }
    }

    /**
     * The type of request or response.
     * @type {Array<Byte>}
     */
    RequestOrResponseType{
        get {
            if(!this.HasProp("__RequestOrResponseTypeProxyArray"))
                this.__RequestOrResponseTypeProxyArray := Win32FixedArray(this.ptr + 510, 2, Primitive, "char")
            return this.__RequestOrResponseTypeProxyArray
        }
    }
}
