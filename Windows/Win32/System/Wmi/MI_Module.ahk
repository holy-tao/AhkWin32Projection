#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32Struct.ahk

/**
 * Generated by the provider, this object contains all the data needed by the provider manager to manage the providers within this module.
 * @see https://learn.microsoft.com/windows/win32/api/mi/ns-mi-mi_module
 * @namespace Windows.Win32.System.Wmi
 * @version v4.0.30319
 */
class MI_Module extends Win32Struct
{
    static sizeof => 48

    static packingSize => 8

    /**
     * The version the provider was compiled with (<b>MI_VERSION</b>).
     * @type {Integer}
     */
    version {
        get => NumGet(this, 0, "uint")
        set => NumPut("uint", value, this, 0)
    }

    /**
     * The hex value of <b>MI_VERSION</b> when the generator was compiled.
     * @type {Integer}
     */
    generatorVersion {
        get => NumGet(this, 4, "uint")
        set => NumPut("uint", value, this, 4)
    }

    /**
     * Module flags.
     * @type {Integer}
     */
    flags {
        get => NumGet(this, 8, "uint")
        set => NumPut("uint", value, this, 8)
    }

    /**
     * Size of the MI_Char in bytes.
     * @type {Integer}
     */
    charSize {
        get => NumGet(this, 12, "uint")
        set => NumPut("uint", value, this, 12)
    }

    /**
     * Pointer to generated schema declarations (static providers only).
     * @type {Pointer<MI_SchemaDecl>}
     */
    schemaDecl {
        get => NumGet(this, 16, "ptr")
        set => NumPut("ptr", value, this, 16)
    }

    /**
     * Function pointer that points to the provider's Load function where initialization takes place.
     * @type {Pointer<MI_Module_Load>}
     */
    Load {
        get => NumGet(this, 24, "ptr")
        set => NumPut("ptr", value, this, 24)
    }

    /**
     * Function pointer that points to the provider's Unload function where cleanup takes place.
     * @type {Pointer<MI_Module_Unload>}
     */
    Unload {
        get => NumGet(this, 32, "ptr")
        set => NumPut("ptr", value, this, 32)
    }

    /**
     * The module may implement a single 'dynamic provider' (one that provides CIM instances, CIM classes and CIM 
     *       qualifier declarations). The provider manager uses this function table when it is non-null, and 
     *       <b>schemaDecl</b> is <b>NULL</b> or does not contain runtime type 
     *       information (RTTI)  corresponding to the given request.
     * @type {Pointer<MI_ProviderFT>}
     */
    dynamicProviderFT {
        get => NumGet(this, 40, "ptr")
        set => NumPut("ptr", value, this, 40)
    }
}
