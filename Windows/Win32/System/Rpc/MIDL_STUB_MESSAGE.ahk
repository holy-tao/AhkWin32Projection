#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32Struct.ahk

/**
 * Is generated by MIDL and contains the current status of the RPC stub. Applications are not to modify the MIDL_STUB_MESSAGE structure directly.
 * @see https://learn.microsoft.com/windows/win32/api/rpcndr/ns-rpcndr-midl_stub_message
 * @namespace Windows.Win32.System.Rpc
 * @version v4.0.30319
 */
class MIDL_STUB_MESSAGE extends Win32Struct
{
    static sizeof => 400

    static packingSize => 8

    /**
     * Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/rpcdcep/ns-rpcdcep-rpc_message">RPC_MESSAGE</a> structure.
     * @type {Pointer<RPC_MESSAGE>}
     */
    RpcMsg {
        get => NumGet(this, 0, "ptr")
        set => NumPut("ptr", value, this, 0)
    }

    /**
     * Pointer that points to a location within the network buffer where the data is marshaled or unmarshaled.
     * @type {Pointer<Byte>}
     */
    Buffer {
        get => NumGet(this, 8, "ptr")
        set => NumPut("ptr", value, this, 8)
    }

    /**
     * Pointer to the beginning of the network buffer.
     * @type {Pointer<Byte>}
     */
    BufferStart {
        get => NumGet(this, 16, "ptr")
        set => NumPut("ptr", value, this, 16)
    }

    /**
     * Pointer to the end of the network buffer.
     * @type {Pointer<Byte>}
     */
    BufferEnd {
        get => NumGet(this, 24, "ptr")
        set => NumPut("ptr", value, this, 24)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    BufferMark {
        get => NumGet(this, 32, "ptr")
        set => NumPut("ptr", value, this, 32)
    }

    /**
     * Size, in bytes, of <b>Buffer</b>.
     * @type {Integer}
     */
    BufferLength {
        get => NumGet(this, 40, "uint")
        set => NumPut("uint", value, this, 40)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    MemorySize {
        get => NumGet(this, 44, "uint")
        set => NumPut("uint", value, this, 44)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    Memory {
        get => NumGet(this, 48, "ptr")
        set => NumPut("ptr", value, this, 48)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    IsClient {
        get => NumGet(this, 56, "char")
        set => NumPut("char", value, this, 56)
    }

    /**
     * 
     * @type {Integer}
     */
    Pad {
        get => NumGet(this, 57, "char")
        set => NumPut("char", value, this, 57)
    }

    /**
     * 
     * @type {Integer}
     */
    uFlags2 {
        get => NumGet(this, 58, "ushort")
        set => NumPut("ushort", value, this, 58)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    ReuseBuffer {
        get => NumGet(this, 60, "int")
        set => NumPut("int", value, this, 60)
    }

    /**
     * Reserved.
     * @type {Pointer<IntPtr>}
     */
    pAllocAllNodesContext {
        get => NumGet(this, 64, "ptr")
        set => NumPut("ptr", value, this, 64)
    }

    /**
     * Reserved.
     * @type {Pointer<IntPtr>}
     */
    pPointerQueueState {
        get => NumGet(this, 72, "ptr")
        set => NumPut("ptr", value, this, 72)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    IgnoreEmbeddedPointers {
        get => NumGet(this, 80, "int")
        set => NumPut("int", value, this, 80)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    PointerBufferMark {
        get => NumGet(this, 88, "ptr")
        set => NumPut("ptr", value, this, 88)
    }

    /**
     * 
     * @type {Integer}
     */
    CorrDespIncrement {
        get => NumGet(this, 96, "char")
        set => NumPut("char", value, this, 96)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    uFlags {
        get => NumGet(this, 97, "char")
        set => NumPut("char", value, this, 97)
    }

    /**
     * 
     * @type {Integer}
     */
    UniquePtrCount {
        get => NumGet(this, 98, "ushort")
        set => NumPut("ushort", value, this, 98)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    MaxCount {
        get => NumGet(this, 104, "ptr")
        set => NumPut("ptr", value, this, 104)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    Offset {
        get => NumGet(this, 112, "uint")
        set => NumPut("uint", value, this, 112)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    ActualCount {
        get => NumGet(this, 116, "uint")
        set => NumPut("uint", value, this, 116)
    }

    /**
     * Reserved.
     * @type {Pointer<PFN_RPC_ALLOCATE>}
     */
    pfnAllocate {
        get => NumGet(this, 120, "ptr")
        set => NumPut("ptr", value, this, 120)
    }

    /**
     * Reserved.
     * @type {Pointer<PFN_RPC_FREE>}
     */
    pfnFree {
        get => NumGet(this, 128, "ptr")
        set => NumPut("ptr", value, this, 128)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    StackTop {
        get => NumGet(this, 136, "ptr")
        set => NumPut("ptr", value, this, 136)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    pPresentedType {
        get => NumGet(this, 144, "ptr")
        set => NumPut("ptr", value, this, 144)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    pTransmitType {
        get => NumGet(this, 152, "ptr")
        set => NumPut("ptr", value, this, 152)
    }

    /**
     * Reserved.
     * @type {Pointer<Void>}
     */
    SavedHandle {
        get => NumGet(this, 160, "ptr")
        set => NumPut("ptr", value, this, 160)
    }

    /**
     * Reserved.
     * @type {Pointer<MIDL_STUB_DESC>}
     */
    StubDesc {
        get => NumGet(this, 168, "ptr")
        set => NumPut("ptr", value, this, 168)
    }

    /**
     * Reserved.
     * @type {Pointer<FULL_PTR_XLAT_TABLES>}
     */
    FullPtrXlatTables {
        get => NumGet(this, 176, "ptr")
        set => NumPut("ptr", value, this, 176)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    FullPtrRefId {
        get => NumGet(this, 184, "uint")
        set => NumPut("uint", value, this, 184)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    PointerLength {
        get => NumGet(this, 188, "uint")
        set => NumPut("uint", value, this, 188)
    }

    /**
     * @type {Integer}
     */
    _bitfield {
        get => NumGet(this, 192, "int")
        set => NumPut("int", value, this, 192)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    dwDestContext {
        get => NumGet(this, 196, "uint")
        set => NumPut("uint", value, this, 196)
    }

    /**
     * Reserved.
     * @type {Pointer<Void>}
     */
    pvDestContext {
        get => NumGet(this, 200, "ptr")
        set => NumPut("ptr", value, this, 200)
    }

    /**
     * Reserved.
     * @type {Pointer<NDR_SCONTEXT>}
     */
    SavedContextHandles {
        get => NumGet(this, 208, "ptr")
        set => NumPut("ptr", value, this, 208)
    }

    /**
     * Reserved.
     * @type {Integer}
     */
    ParamNumber {
        get => NumGet(this, 216, "int")
        set => NumPut("int", value, this, 216)
    }

    /**
     * Reserved.
     * @type {Pointer<IRpcChannelBuffer>}
     */
    pRpcChannelBuffer {
        get => NumGet(this, 224, "ptr")
        set => NumPut("ptr", value, this, 224)
    }

    /**
     * Reserved.
     * @type {Pointer<ARRAY_INFO>}
     */
    pArrayInfo {
        get => NumGet(this, 232, "ptr")
        set => NumPut("ptr", value, this, 232)
    }

    /**
     * Reserved.
     * @type {Pointer<UInt32>}
     */
    SizePtrCountArray {
        get => NumGet(this, 240, "ptr")
        set => NumPut("ptr", value, this, 240)
    }

    /**
     * Reserved.
     * @type {Pointer<UInt32>}
     */
    SizePtrOffsetArray {
        get => NumGet(this, 248, "ptr")
        set => NumPut("ptr", value, this, 248)
    }

    /**
     * Reserved.
     * @type {Pointer<UInt32>}
     */
    SizePtrLengthArray {
        get => NumGet(this, 256, "ptr")
        set => NumPut("ptr", value, this, 256)
    }

    /**
     * Reserved.
     * @type {Pointer<Void>}
     */
    pArgQueue {
        get => NumGet(this, 264, "ptr")
        set => NumPut("ptr", value, this, 264)
    }

    /**
     * Pointer to a flag that tracks the current interpreter call's activity.
     * @type {Integer}
     */
    dwStubPhase {
        get => NumGet(this, 272, "uint")
        set => NumPut("uint", value, this, 272)
    }

    /**
     * Reserved.
     * @type {Pointer<Void>}
     */
    LowStackMark {
        get => NumGet(this, 280, "ptr")
        set => NumPut("ptr", value, this, 280)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    pAsyncMsg {
        get => NumGet(this, 288, "ptr")
        set => NumPut("ptr", value, this, 288)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    pCorrInfo {
        get => NumGet(this, 296, "ptr")
        set => NumPut("ptr", value, this, 296)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    pCorrMemory {
        get => NumGet(this, 304, "ptr")
        set => NumPut("ptr", value, this, 304)
    }

    /**
     * Reserved.
     * @type {Pointer<Void>}
     */
    pMemoryList {
        get => NumGet(this, 312, "ptr")
        set => NumPut("ptr", value, this, 312)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    pCSInfo {
        get => NumGet(this, 320, "ptr")
        set => NumPut("ptr", value, this, 320)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    ConformanceMark {
        get => NumGet(this, 328, "ptr")
        set => NumPut("ptr", value, this, 328)
    }

    /**
     * Reserved.
     * @type {Pointer<Byte>}
     */
    VarianceMark {
        get => NumGet(this, 336, "ptr")
        set => NumPut("ptr", value, this, 336)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    Unused {
        get => NumGet(this, 344, "ptr")
        set => NumPut("ptr", value, this, 344)
    }

    /**
     * Reserved.
     * @type {Pointer<IntPtr>}
     */
    pContext {
        get => NumGet(this, 352, "ptr")
        set => NumPut("ptr", value, this, 352)
    }

    /**
     * 
     * @type {Pointer<Void>}
     */
    ContextHandleHash {
        get => NumGet(this, 360, "ptr")
        set => NumPut("ptr", value, this, 360)
    }

    /**
     * 
     * @type {Pointer<Void>}
     */
    pUserMarshalList {
        get => NumGet(this, 368, "ptr")
        set => NumPut("ptr", value, this, 368)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    Reserved51_3 {
        get => NumGet(this, 376, "ptr")
        set => NumPut("ptr", value, this, 376)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    Reserved51_4 {
        get => NumGet(this, 384, "ptr")
        set => NumPut("ptr", value, this, 384)
    }

    /**
     * Reserved.
     * @type {Pointer}
     */
    Reserved51_5 {
        get => NumGet(this, 392, "ptr")
        set => NumPut("ptr", value, this, 392)
    }
}
