#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32Struct.ahk

/**
 * Contains result data generated by an EAP method during authentication.
 * @see https://docs.microsoft.com/windows/win32/api//eapmethodpeerapis/ns-eapmethodpeerapis-eappeermethodresult
 * @namespace Windows.Win32.Security.ExtensibleAuthenticationProtocol
 * @version v4.0.30319
 */
class EapPeerMethodResult extends Win32Struct
{
    static sizeof => 72

    static packingSize => 8

    /**
     * If <b>TRUE</b>, the supplicant was successfully authenticated; if <b>FALSE</b>, it was not.
     * @type {BOOL}
     */
    fIsSuccess {
        get => NumGet(this, 0, "int")
        set => NumPut("int", value, this, 0)
    }

    /**
     * Contains a reason code if the supplicant could not be authenticated.
     * @type {Integer}
     */
    dwFailureReasonCode {
        get => NumGet(this, 4, "uint")
        set => NumPut("uint", value, this, 4)
    }

    /**
     * If <b>TRUE</b>, the connection data specified in <b>pConnectionData</b> data must be persisted to disk; otherwise, it does not need to be saved.
     * @type {BOOL}
     */
    fSaveConnectionData {
        get => NumGet(this, 8, "int")
        set => NumPut("int", value, this, 8)
    }

    /**
     * The size, in bytes, of <b>pConnectionData</b>.
     * @type {Integer}
     */
    dwSizeofConnectionData {
        get => NumGet(this, 12, "uint")
        set => NumPut("uint", value, this, 12)
    }

    /**
     * A pointer to a byte buffer that contains information on the connection over which the EAP authentication session is held. The buffer can contain no more than <i>dwSizeOfConnectionData</i> elements.
     * @type {Pointer<Integer>}
     */
    pConnectionData {
        get => NumGet(this, 16, "ptr")
        set => NumPut("ptr", value, this, 16)
    }

    /**
     * If <b>TRUE</b>, the user data specified in <b>pUserData</b> data must be persisted to disk; otherwise, it does not need to be saved.
     * @type {BOOL}
     */
    fSaveUserData {
        get => NumGet(this, 24, "int")
        set => NumPut("int", value, this, 24)
    }

    /**
     * The size, in bytes, of <i>pUserData</i>.
     * @type {Integer}
     */
    dwSizeofUserData {
        get => NumGet(this, 28, "uint")
        set => NumPut("uint", value, this, 28)
    }

    /**
     * A pointer to a  byte buffer that contains information on the supplicant user that requested the EAP authentication session.The buffer can contain no more than <i>dwSizeofUserData</i> elements.
     * @type {Pointer<Integer>}
     */
    pUserData {
        get => NumGet(this, 32, "ptr")
        set => NumPut("ptr", value, this, 32)
    }

    /**
     * A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/eaptypes/ns-eaptypes-eap_attributes">EAP_ATTRIBUTES</a> array structure that contains the EAP attributes  returned by the authentication session.
     * @type {Pointer<EAP_ATTRIBUTES>}
     */
    pAttribArray {
        get => NumGet(this, 40, "ptr")
        set => NumPut("ptr", value, this, 40)
    }

    /**
     * A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/eaptypes/ns-eaptypes-eap_error">EAP_ERROR</a> structure that contains any errors raised during  the execution of this function call. After consuming the error data, this memory must be freed by passing a pointer to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/eapmethodpeerapis/nf-eapmethodpeerapis-eappeerfreeerrormemory">EapPeerFreeErrorMemory</a>.
     * @type {Pointer<EAP_ERROR>}
     */
    pEapError {
        get => NumGet(this, 48, "ptr")
        set => NumPut("ptr", value, this, 48)
    }

    /**
     * Kerberos ticket.
     * @type {Pointer<NgcTicketContext>}
     */
    pNgcKerbTicket {
        get => NumGet(this, 56, "ptr")
        set => NumPut("ptr", value, this, 56)
    }

    /**
     * Whether or not to save to Credential Manager.
     * @type {BOOL}
     */
    fSaveToCredMan {
        get => NumGet(this, 64, "int")
        set => NumPut("int", value, this, 64)
    }
}
