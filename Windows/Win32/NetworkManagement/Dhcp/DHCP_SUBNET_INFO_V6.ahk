#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32Struct.ahk
#Include .\DHCP_IPV6_ADDRESS.ahk

/**
 * Contains information about an IPv6 subnet.
 * @see https://learn.microsoft.com/windows/win32/api/dhcpsapi/ns-dhcpsapi-dhcp_subnet_info_v6
 * @namespace Windows.Win32.NetworkManagement.Dhcp
 * @version v4.0.30319
 */
class DHCP_SUBNET_INFO_V6 extends Win32Struct
{
    static sizeof => 48

    static packingSize => 8

    /**
     * <a href="https://docs.microsoft.com/windows/desktop/api/dhcpsapi/ns-dhcpsapi-dhcp_ipv6_address">DHCP_IPV6_ADDRESS</a> structure containing the IPv6 prefix.
     * @type {DHCP_IPV6_ADDRESS}
     */
    SubnetAddress{
        get {
            if(!this.HasProp("__SubnetAddress"))
                this.__SubnetAddress := DHCP_IPV6_ADDRESS(this.ptr + 0)
            return this.__SubnetAddress
        }
    }

    /**
     * <b>ULONG</b> value that specifies the length of the IPv6 prefix.
     * @type {Integer}
     */
    Prefix {
        get => NumGet(this, 16, "uint")
        set => NumPut("uint", value, this, 16)
    }

    /**
     * <b>USHORT</b> value that specifies the preference for the IPv6 prefix.
     * @type {Integer}
     */
    Preference {
        get => NumGet(this, 20, "ushort")
        set => NumPut("ushort", value, this, 20)
    }

    /**
     * Pointer to a null-terminated Unicode string that contains the name of the IPv6 prefix.
     * @type {Pointer<PWSTR>}
     */
    SubnetName {
        get => NumGet(this, 24, "ptr")
        set => NumPut("ptr", value, this, 24)
    }

    /**
     * Pointer to a null-terminated Unicode string that contains an optional comment for the IPv6 prefix.
     * @type {Pointer<PWSTR>}
     */
    SubnetComment {
        get => NumGet(this, 32, "ptr")
        set => NumPut("ptr", value, this, 32)
    }

    /**
     * An enumeration of the <a href="https://docs.microsoft.com/windows/desktop/api/dhcpsapi/ne-dhcpsapi-dhcp_subnet_state">DHCP_SUBNET_STATE</a> that indicates the current state of the IPv6 prefix.
     * @type {Integer}
     */
    State {
        get => NumGet(this, 40, "uint")
        set => NumPut("uint", value, this, 40)
    }

    /**
     * A <b>DWORD</b> value that serves as the unique identifier for the IPv6 prefix. This value is generated by the DHCPv6 server.
     * @type {Integer}
     */
    ScopeId {
        get => NumGet(this, 44, "uint")
        set => NumPut("uint", value, this, 44)
    }
}
