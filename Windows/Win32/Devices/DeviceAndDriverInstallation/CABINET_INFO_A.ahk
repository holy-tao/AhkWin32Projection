#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32Struct.ahk

/**
 * The CABINET_INFO structure stores information about a cabinet file. The SetupIterateCabinet function specifies this structure as a parameter when it sends a SPFILENOTIFY_NEEDNEWCABINET notification to the cabinet callback routine. (ANSI)
 * @remarks
 * > [!NOTE]
  * > The setupapi.h header defines CABINET_INFO as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).
 * @see https://learn.microsoft.com/windows/win32/api/setupapi/ns-setupapi-cabinet_info_a
 * @namespace Windows.Win32.Devices.DeviceAndDriverInstallation
 * @version v4.0.30319
 * @charset ANSI
 */
class CABINET_INFO_A extends Win32Struct
{
    static sizeof => 32

    static packingSize => 8

    /**
     * Path to the cabinet file.
     * @type {Pointer<PSTR>}
     */
    CabinetPath {
        get => NumGet(this, 0, "ptr")
        set => NumPut("ptr", value, this, 0)
    }

    /**
     * Name of the cabinet file.
     * @type {Pointer<PSTR>}
     */
    CabinetFile {
        get => NumGet(this, 8, "ptr")
        set => NumPut("ptr", value, this, 8)
    }

    /**
     * Name of the source media that contains the cabinet file.
     * @type {Pointer<PSTR>}
     */
    DiskName {
        get => NumGet(this, 16, "ptr")
        set => NumPut("ptr", value, this, 16)
    }

    /**
     * Identifier of the current set. This number is generated by the software that builds the cabinet.
     * @type {Integer}
     */
    SetId {
        get => NumGet(this, 24, "ushort")
        set => NumPut("ushort", value, this, 24)
    }

    /**
     * Number of the cabinet. This number is generated by the software that builds the cabinet and is generally a zero- or 1-based index indicating the ordinal of the position of the cabinet within a set.
     * @type {Integer}
     */
    CabinetNumber {
        get => NumGet(this, 26, "ushort")
        set => NumPut("ushort", value, this, 26)
    }
}
