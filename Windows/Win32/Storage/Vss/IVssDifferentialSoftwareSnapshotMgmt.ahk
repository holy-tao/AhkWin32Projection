#Requires AutoHotkey v2.0.0 64-bit
#Include ..\..\..\..\Win32ComInterface.ahk
#Include ..\..\..\..\Guid.ahk
#Include ..\..\System\Com\IUnknown.ahk

/**
 * Contains methods that allow applications to query and manage shadow copy storage areas generated by the system shadow copy provider.
 * @see https://docs.microsoft.com/windows/win32/api//vsmgmt/nn-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt
 * @namespace Windows.Win32.Storage.Vss
 * @version v4.0.30319
 */
class IVssDifferentialSoftwareSnapshotMgmt extends IUnknown{

    static sizeof => A_PtrSize
    /**
     * The interface identifier for IVssDifferentialSoftwareSnapshotMgmt
     * @type {Guid}
     */
    static IID => Guid("{214a0f28-b737-4026-b847-4f9e37d79529}")

    /**
     * The offset into the COM object's virtual function table at which this interface's methods begin.
     * @type {Integer}
     */
    static vTableOffset => 3

    /**
     * @readonly used when implementing interfaces to order function pointers
     * @type {Array<String>}
     */
    static VTableNames => ["AddDiffArea", "ChangeDiffAreaMaximumSize", "QueryVolumesSupportedForDiffAreas", "QueryDiffAreasForVolume", "QueryDiffAreasOnVolume", "QueryDiffAreasForSnapshot"]

    /**
     * 
     * @param {Pointer<Integer>} pwszVolumeName 
     * @param {Pointer<Integer>} pwszDiffAreaVolumeName 
     * @param {Integer} llMaximumDiffSpace 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/vsmgmt/nf-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt-adddiffarea
     */
    AddDiffArea(pwszVolumeName, pwszDiffAreaVolumeName, llMaximumDiffSpace) {
        pwszVolumeNameMarshal := pwszVolumeName is VarRef ? "ushort*" : "ptr"
        pwszDiffAreaVolumeNameMarshal := pwszDiffAreaVolumeName is VarRef ? "ushort*" : "ptr"

        result := ComCall(3, this, pwszVolumeNameMarshal, pwszVolumeName, pwszDiffAreaVolumeNameMarshal, pwszDiffAreaVolumeName, "int64", llMaximumDiffSpace, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Pointer<Integer>} pwszVolumeName 
     * @param {Pointer<Integer>} pwszDiffAreaVolumeName 
     * @param {Integer} llMaximumDiffSpace 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/vsmgmt/nf-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt-changediffareamaximumsize
     */
    ChangeDiffAreaMaximumSize(pwszVolumeName, pwszDiffAreaVolumeName, llMaximumDiffSpace) {
        pwszVolumeNameMarshal := pwszVolumeName is VarRef ? "ushort*" : "ptr"
        pwszDiffAreaVolumeNameMarshal := pwszDiffAreaVolumeName is VarRef ? "ushort*" : "ptr"

        result := ComCall(4, this, pwszVolumeNameMarshal, pwszVolumeName, pwszDiffAreaVolumeNameMarshal, pwszDiffAreaVolumeName, "int64", llMaximumDiffSpace, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Pointer<Integer>} pwszOriginalVolumeName 
     * @param {Pointer<IVssEnumMgmtObject>} ppEnum 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/vsmgmt/nf-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt-queryvolumessupportedfordiffareas
     */
    QueryVolumesSupportedForDiffAreas(pwszOriginalVolumeName, ppEnum) {
        pwszOriginalVolumeNameMarshal := pwszOriginalVolumeName is VarRef ? "ushort*" : "ptr"

        result := ComCall(5, this, pwszOriginalVolumeNameMarshal, pwszOriginalVolumeName, "ptr*", ppEnum, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Pointer<Integer>} pwszVolumeName 
     * @param {Pointer<IVssEnumMgmtObject>} ppEnum 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/vsmgmt/nf-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt-querydiffareasforvolume
     */
    QueryDiffAreasForVolume(pwszVolumeName, ppEnum) {
        pwszVolumeNameMarshal := pwszVolumeName is VarRef ? "ushort*" : "ptr"

        result := ComCall(6, this, pwszVolumeNameMarshal, pwszVolumeName, "ptr*", ppEnum, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Pointer<Integer>} pwszVolumeName 
     * @param {Pointer<IVssEnumMgmtObject>} ppEnum 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/vsmgmt/nf-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt-querydiffareasonvolume
     */
    QueryDiffAreasOnVolume(pwszVolumeName, ppEnum) {
        pwszVolumeNameMarshal := pwszVolumeName is VarRef ? "ushort*" : "ptr"

        result := ComCall(7, this, pwszVolumeNameMarshal, pwszVolumeName, "ptr*", ppEnum, "HRESULT")
        return result
    }

    /**
     * 
     * @param {Guid} SnapshotId 
     * @param {Pointer<IVssEnumMgmtObject>} ppEnum 
     * @returns {HRESULT} 
     * @see https://learn.microsoft.com/windows/win32/api/vsmgmt/nf-vsmgmt-ivssdifferentialsoftwaresnapshotmgmt-querydiffareasforsnapshot
     */
    QueryDiffAreasForSnapshot(SnapshotId, ppEnum) {
        result := ComCall(8, this, "ptr", SnapshotId, "ptr*", ppEnum, "HRESULT")
        return result
    }
}
